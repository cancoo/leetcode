//题目：
/**
我们要把给定的字符串 S 从左到右写到每一行上，每一行的最大宽度为100个单位，如果我们在写某个字母的时候会使这行超过了100 个单位，那么我们应该把这个字母写到下一行。我们给定了一个数组 widths ，这个数组 widths[0] 代表 'a' 需要的单位， widths[1] 代表 'b' 需要的单位，...， widths[25] 代表 'z' 需要的单位。
现在回答两个问题：至少多少行能放下S，以及最后一行使用的宽度是多少个单位？将你的答案作为长度为2的整数列表返回。
示例
输入: 
widths = [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]
S = "abcdefghijklmnopqrstuvwxyz"
输出: [3, 60]
解释: 
所有的字符拥有相同的占用单位10。所以书写所有的26个字母，
我们需要2个整行和占用60个单位的一行。
*/

//分析：
//这个题目看起来很长，其实就是每个字母占不同的位数，然后看看一串字母一共占了多少行，注意每行最后空间是否够用，每个字母不能分两行。没什么难度，一次AC。

class Solution {
public:
    vector<int> numberOfLines(vector<int>& widths, string S) {
        int sum=0;
        int line=1;
        vector<int> res;
        for(int i=0;i<S.size();i++)
        {
            if(100-sum<(widths[S[i]-'a']))
            {
                line++;
                sum=widths[S[i]-'a'];
            }
            else
                sum+=widths[S[i]-'a'];
            
        }
        res.push_back(line);
        res.push_back(sum);
        return res;
    }
};
